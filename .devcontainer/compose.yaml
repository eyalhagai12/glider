version: "3.8"

services:
  devcontainer:
    image: mcr.microsoft.com/devcontainers/base:ubuntu
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    container_name: glider-devcontainer
    labels:
      - traefik.enable=true
      - traefik.http.routers.dev-rtr.rule=PathPrefix(`/dev`)
      - traefik.http.services.dev-svc.loadbalancer.server.port=8080
      - traefik.http.routers.dev-rtr.middlewares=dev-stripprefix
      - traefik.http.middlewares.dev-stripprefix.stripprefix.prefixes=/dev

  db:
    image: postgres:latest
    container_name: glider-db
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: glider123
      POSTGRES_USER: glider
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "glider"]

  registry:
    image: registry:latest
    container_name: glider-registry
    ports:
      - "5000:5000"
    volumes:
      - registry-data:/var/lib/registry
    restart: always

  registry-ui:
    image: joxit/docker-registry-ui:main
    restart: always
    ports:
      - 81:80
    environment:
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Docker Registry UI
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    container_name: registry-ui
    labels:
      - traefik.enable=true
      - traefik.http.routers.glider-registry-rtr.rule=PathPrefix(`/registry`)
      - traefik.http.services.glider-registry-svc.loadbalancer.server.port=80

  pg-admin:
    image: dpage/pgadmin4:latest
    container_name: glider-pgadmin
    ports:
      - 82:80
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: glider@gmail.com
      PGADMIN_DEFAULT_PASSWORD: glider123
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pg-admin-rtr.rule=PathPrefix(`/pgadmin`)
      - traefik.http.services.pg-admin-svc.loadbalancer.server.port=80

  headscale:
    image: headscale/headscale:latest
    pull_policy: always
    container_name: headscale
    restart: unless-stopped
    command: serve
    volumes:
      - ./headscale/config:/etc/headscale
      - ./headscale/data:/var/lib/headscale
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-rtr.rule=PathPrefix(`/headscale`)
      - traefik.http.routers.headscale-rtr.middlewares=headscale-stripprefix
      - traefik.http.middlewares.headscale-stripprefix.stripprefix.prefixes=/headscale
      - traefik.http.services.headscale-svc.loadbalancer.server.port=8080

  headscale-ui:
    image: ghcr.io/gurucomputing/headscale-ui:latest
    pull_policy: always
    container_name: headscale-ui
    restart: unless-stopped
    environment:
      - HEADSCALE_URL=/headscale
      - HEADSCALE_ADMIN_TOKEN=Bearer bvgEP5_.A4ORYr065SgfPrf1oakESJgsURs5PgON
    labels:
      - traefik.enable=true
      - traefik.http.routers.headscale-ui-rtr.rule=PathPrefix(`/web`)
      - traefik.http.routers.headscale-ui-rtr.middlewares=ui-stripprefix
      - traefik.http.middlewares.ui-stripprefix.stripprefix.prefixes=/headscale-ui
      - traefik.http.services.headscale-ui-svc.loadbalancer.server.port=8080

  traefik:
    image: traefik:latest
    pull_policy: always
    restart: unless-stopped
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080 # web UI (enabled with api.insecure)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certificates:/certificates
    command:
      - --api.insecure=true # Remove for production
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --global.sendAnonymousUsage=false

volumes:
  postgres-data:
  registry-data:
  pgadmin-data:
  headscale-data:
