version: "3.8"

services:
  devcontainer:
    image: mcr.microsoft.com/devcontainers/base:ubuntu
    volumes:
      - ../..:/workspaces:cached
    command: sleep infinity
    container_name: glider-devcontainer
    labels:
      - traefik.enable=true
      - traefik.http.routers.dev-rtr.rule=PathPrefix(`/dev`)
      - traefik.http.services.dev-svc.loadbalancer.server.port=8080
      - traefik.http.routers.dev-rtr.middlewares=dev-stripprefix
      - traefik.http.middlewares.dev-stripprefix.stripprefix.prefixes=/dev
    networks:
      - glider-net

  db:
    image: postgres:latest
    container_name: glider-db
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: glider123
      POSTGRES_USER: glider
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "glider"]
    networks:
      - glider-net

  registry:
    image: registry:latest
    container_name: glider-registry
    ports:
      - "5000:5000"
    volumes:
      - registry-data:/var/lib/registry
    restart: always
    networks:
      - glider-net

  pg-admin:
    image: dpage/pgadmin4:latest
    container_name: glider-pgadmin
    ports:
      - 82:80
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: glider@gmail.com
      PGADMIN_DEFAULT_PASSWORD: glider123
    depends_on:
      - db
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    labels:
      - traefik.enable=true
      - traefik.http.routers.pg-admin-rtr.rule=PathPrefix(`/pgadmin`)
      - traefik.http.services.pg-admin-svc.loadbalancer.server.port=80
    networks:
      - glider-net

  traefik:
    image: traefik:latest
    pull_policy: always
    restart: unless-stopped
    container_name: traefik
    ports:
      - 80:80
      - 443:443
      - 8080:8080 # web UI (enabled with api.insecure)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/certificates:/certificates
    command:
      - --api.insecure=true # Remove for production
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.traefik.address=:8080
      - --global.sendAnonymousUsage=false
    networks:
      - glider-net

volumes:
  postgres-data:
  registry-data:
  pgadmin-data:

networks:
  glider-net:
